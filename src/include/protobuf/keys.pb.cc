// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: keys.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "keys.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace collaborative {
namespace ml {

namespace {

const ::google::protobuf::Descriptor* PB_Keys_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_Keys_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_PublicN_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_PublicN_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_keys_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_keys_2eproto() {
  protobuf_AddDesc_keys_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "keys.proto");
  GOOGLE_CHECK(file != NULL);
  PB_Keys_descriptor_ = file->message_type(0);
  static const int PB_Keys_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_Keys, public_key_s_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_Keys, public_key_w_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_Keys, public_key_l_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_Keys, public_key_n_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_Keys, public_key_g_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_Keys, public_key_delta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_Keys, auth_server_i_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_Keys, auth_server_si_),
  };
  PB_Keys_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_Keys_descriptor_,
      PB_Keys::default_instance_,
      PB_Keys_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_Keys),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_Keys, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_Keys, _is_default_instance_));
  PB_PublicN_descriptor_ = file->message_type(1);
  static const int PB_PublicN_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PublicN, n_),
  };
  PB_PublicN_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_PublicN_descriptor_,
      PB_PublicN::default_instance_,
      PB_PublicN_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_PublicN),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PublicN, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PublicN, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_keys_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_Keys_descriptor_, &PB_Keys::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_PublicN_descriptor_, &PB_PublicN::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_keys_2eproto() {
  delete PB_Keys::default_instance_;
  delete PB_Keys_reflection_;
  delete PB_PublicN::default_instance_;
  delete PB_PublicN_reflection_;
}

void protobuf_AddDesc_keys_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_keys_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nkeys.proto\022\024com.collaborative.ml\"\342\001\n\007P"
    "B_Keys\022\024\n\014public_key_s\030\001 \001(\005\022\024\n\014public_k"
    "ey_w\030\002 \001(\005\022\024\n\014public_key_l\030\003 \001(\005\0226\n\014publ"
    "ic_key_n\030\004 \003(\0132 .com.collaborative.ml.PB"
    "_PublicN\022\024\n\014public_key_g\030\005 \001(\t\022\030\n\020public"
    "_key_delta\030\006 \001(\t\022\025\n\rauth_server_i\030\007 \001(\005\022"
    "\026\n\016auth_server_si\030\010 \001(\t\"\027\n\nPB_PublicN\022\t\n"
    "\001n\030\001 \001(\tb\006proto3", 296);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "keys.proto", &protobuf_RegisterTypes);
  PB_Keys::default_instance_ = new PB_Keys();
  PB_PublicN::default_instance_ = new PB_PublicN();
  PB_Keys::default_instance_->InitAsDefaultInstance();
  PB_PublicN::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_keys_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_keys_2eproto {
  StaticDescriptorInitializer_keys_2eproto() {
    protobuf_AddDesc_keys_2eproto();
  }
} static_descriptor_initializer_keys_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_Keys::kPublicKeySFieldNumber;
const int PB_Keys::kPublicKeyWFieldNumber;
const int PB_Keys::kPublicKeyLFieldNumber;
const int PB_Keys::kPublicKeyNFieldNumber;
const int PB_Keys::kPublicKeyGFieldNumber;
const int PB_Keys::kPublicKeyDeltaFieldNumber;
const int PB_Keys::kAuthServerIFieldNumber;
const int PB_Keys::kAuthServerSiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_Keys::PB_Keys()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.collaborative.ml.PB_Keys)
}

void PB_Keys::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_Keys::PB_Keys(const PB_Keys& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.collaborative.ml.PB_Keys)
}

void PB_Keys::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  public_key_s_ = 0;
  public_key_w_ = 0;
  public_key_l_ = 0;
  public_key_g_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_key_delta_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auth_server_i_ = 0;
  auth_server_si_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PB_Keys::~PB_Keys() {
  // @@protoc_insertion_point(destructor:com.collaborative.ml.PB_Keys)
  SharedDtor();
}

void PB_Keys::SharedDtor() {
  public_key_g_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_key_delta_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auth_server_si_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PB_Keys::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_Keys::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_Keys_descriptor_;
}

const PB_Keys& PB_Keys::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_keys_2eproto();
  return *default_instance_;
}

PB_Keys* PB_Keys::default_instance_ = NULL;

PB_Keys* PB_Keys::New(::google::protobuf::Arena* arena) const {
  PB_Keys* n = new PB_Keys;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_Keys::Clear() {
// @@protoc_insertion_point(message_clear_start:com.collaborative.ml.PB_Keys)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_Keys, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_Keys*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(public_key_s_, public_key_w_);
  ZR_(public_key_l_, auth_server_i_);
  public_key_g_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_key_delta_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auth_server_si_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  public_key_n_.Clear();
}

bool PB_Keys::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.collaborative.ml.PB_Keys)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 public_key_s = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &public_key_s_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_public_key_w;
        break;
      }

      // optional int32 public_key_w = 2;
      case 2: {
        if (tag == 16) {
         parse_public_key_w:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &public_key_w_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_public_key_l;
        break;
      }

      // optional int32 public_key_l = 3;
      case 3: {
        if (tag == 24) {
         parse_public_key_l:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &public_key_l_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_public_key_n;
        break;
      }

      // repeated .com.collaborative.ml.PB_PublicN public_key_n = 4;
      case 4: {
        if (tag == 34) {
         parse_public_key_n:
          DO_(input->IncrementRecursionDepth());
         parse_loop_public_key_n:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_public_key_n()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_public_key_n;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(42)) goto parse_public_key_g;
        break;
      }

      // optional string public_key_g = 5;
      case 5: {
        if (tag == 42) {
         parse_public_key_g:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_public_key_g()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->public_key_g().data(), this->public_key_g().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.collaborative.ml.PB_Keys.public_key_g"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_public_key_delta;
        break;
      }

      // optional string public_key_delta = 6;
      case 6: {
        if (tag == 50) {
         parse_public_key_delta:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_public_key_delta()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->public_key_delta().data(), this->public_key_delta().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.collaborative.ml.PB_Keys.public_key_delta"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_auth_server_i;
        break;
      }

      // optional int32 auth_server_i = 7;
      case 7: {
        if (tag == 56) {
         parse_auth_server_i:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auth_server_i_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_auth_server_si;
        break;
      }

      // optional string auth_server_si = 8;
      case 8: {
        if (tag == 66) {
         parse_auth_server_si:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_auth_server_si()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->auth_server_si().data(), this->auth_server_si().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.collaborative.ml.PB_Keys.auth_server_si"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.collaborative.ml.PB_Keys)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.collaborative.ml.PB_Keys)
  return false;
#undef DO_
}

void PB_Keys::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.collaborative.ml.PB_Keys)
  // optional int32 public_key_s = 1;
  if (this->public_key_s() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->public_key_s(), output);
  }

  // optional int32 public_key_w = 2;
  if (this->public_key_w() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->public_key_w(), output);
  }

  // optional int32 public_key_l = 3;
  if (this->public_key_l() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->public_key_l(), output);
  }

  // repeated .com.collaborative.ml.PB_PublicN public_key_n = 4;
  for (unsigned int i = 0, n = this->public_key_n_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->public_key_n(i), output);
  }

  // optional string public_key_g = 5;
  if (this->public_key_g().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->public_key_g().data(), this->public_key_g().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.collaborative.ml.PB_Keys.public_key_g");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->public_key_g(), output);
  }

  // optional string public_key_delta = 6;
  if (this->public_key_delta().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->public_key_delta().data(), this->public_key_delta().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.collaborative.ml.PB_Keys.public_key_delta");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->public_key_delta(), output);
  }

  // optional int32 auth_server_i = 7;
  if (this->auth_server_i() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->auth_server_i(), output);
  }

  // optional string auth_server_si = 8;
  if (this->auth_server_si().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->auth_server_si().data(), this->auth_server_si().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.collaborative.ml.PB_Keys.auth_server_si");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->auth_server_si(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.collaborative.ml.PB_Keys)
}

::google::protobuf::uint8* PB_Keys::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.collaborative.ml.PB_Keys)
  // optional int32 public_key_s = 1;
  if (this->public_key_s() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->public_key_s(), target);
  }

  // optional int32 public_key_w = 2;
  if (this->public_key_w() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->public_key_w(), target);
  }

  // optional int32 public_key_l = 3;
  if (this->public_key_l() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->public_key_l(), target);
  }

  // repeated .com.collaborative.ml.PB_PublicN public_key_n = 4;
  for (unsigned int i = 0, n = this->public_key_n_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->public_key_n(i), false, target);
  }

  // optional string public_key_g = 5;
  if (this->public_key_g().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->public_key_g().data(), this->public_key_g().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.collaborative.ml.PB_Keys.public_key_g");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->public_key_g(), target);
  }

  // optional string public_key_delta = 6;
  if (this->public_key_delta().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->public_key_delta().data(), this->public_key_delta().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.collaborative.ml.PB_Keys.public_key_delta");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->public_key_delta(), target);
  }

  // optional int32 auth_server_i = 7;
  if (this->auth_server_i() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->auth_server_i(), target);
  }

  // optional string auth_server_si = 8;
  if (this->auth_server_si().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->auth_server_si().data(), this->auth_server_si().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.collaborative.ml.PB_Keys.auth_server_si");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->auth_server_si(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.collaborative.ml.PB_Keys)
  return target;
}

int PB_Keys::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.collaborative.ml.PB_Keys)
  int total_size = 0;

  // optional int32 public_key_s = 1;
  if (this->public_key_s() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->public_key_s());
  }

  // optional int32 public_key_w = 2;
  if (this->public_key_w() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->public_key_w());
  }

  // optional int32 public_key_l = 3;
  if (this->public_key_l() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->public_key_l());
  }

  // optional string public_key_g = 5;
  if (this->public_key_g().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->public_key_g());
  }

  // optional string public_key_delta = 6;
  if (this->public_key_delta().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->public_key_delta());
  }

  // optional int32 auth_server_i = 7;
  if (this->auth_server_i() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->auth_server_i());
  }

  // optional string auth_server_si = 8;
  if (this->auth_server_si().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->auth_server_si());
  }

  // repeated .com.collaborative.ml.PB_PublicN public_key_n = 4;
  total_size += 1 * this->public_key_n_size();
  for (int i = 0; i < this->public_key_n_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->public_key_n(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_Keys::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.collaborative.ml.PB_Keys)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_Keys* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_Keys>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.collaborative.ml.PB_Keys)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.collaborative.ml.PB_Keys)
    MergeFrom(*source);
  }
}

void PB_Keys::MergeFrom(const PB_Keys& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.collaborative.ml.PB_Keys)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  public_key_n_.MergeFrom(from.public_key_n_);
  if (from.public_key_s() != 0) {
    set_public_key_s(from.public_key_s());
  }
  if (from.public_key_w() != 0) {
    set_public_key_w(from.public_key_w());
  }
  if (from.public_key_l() != 0) {
    set_public_key_l(from.public_key_l());
  }
  if (from.public_key_g().size() > 0) {

    public_key_g_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_g_);
  }
  if (from.public_key_delta().size() > 0) {

    public_key_delta_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_delta_);
  }
  if (from.auth_server_i() != 0) {
    set_auth_server_i(from.auth_server_i());
  }
  if (from.auth_server_si().size() > 0) {

    auth_server_si_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.auth_server_si_);
  }
}

void PB_Keys::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.collaborative.ml.PB_Keys)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_Keys::CopyFrom(const PB_Keys& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.collaborative.ml.PB_Keys)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_Keys::IsInitialized() const {

  return true;
}

void PB_Keys::Swap(PB_Keys* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_Keys::InternalSwap(PB_Keys* other) {
  std::swap(public_key_s_, other->public_key_s_);
  std::swap(public_key_w_, other->public_key_w_);
  std::swap(public_key_l_, other->public_key_l_);
  public_key_n_.UnsafeArenaSwap(&other->public_key_n_);
  public_key_g_.Swap(&other->public_key_g_);
  public_key_delta_.Swap(&other->public_key_delta_);
  std::swap(auth_server_i_, other->auth_server_i_);
  auth_server_si_.Swap(&other->auth_server_si_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_Keys::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_Keys_descriptor_;
  metadata.reflection = PB_Keys_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_Keys

// optional int32 public_key_s = 1;
void PB_Keys::clear_public_key_s() {
  public_key_s_ = 0;
}
 ::google::protobuf::int32 PB_Keys::public_key_s() const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_Keys.public_key_s)
  return public_key_s_;
}
 void PB_Keys::set_public_key_s(::google::protobuf::int32 value) {
  
  public_key_s_ = value;
  // @@protoc_insertion_point(field_set:com.collaborative.ml.PB_Keys.public_key_s)
}

// optional int32 public_key_w = 2;
void PB_Keys::clear_public_key_w() {
  public_key_w_ = 0;
}
 ::google::protobuf::int32 PB_Keys::public_key_w() const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_Keys.public_key_w)
  return public_key_w_;
}
 void PB_Keys::set_public_key_w(::google::protobuf::int32 value) {
  
  public_key_w_ = value;
  // @@protoc_insertion_point(field_set:com.collaborative.ml.PB_Keys.public_key_w)
}

// optional int32 public_key_l = 3;
void PB_Keys::clear_public_key_l() {
  public_key_l_ = 0;
}
 ::google::protobuf::int32 PB_Keys::public_key_l() const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_Keys.public_key_l)
  return public_key_l_;
}
 void PB_Keys::set_public_key_l(::google::protobuf::int32 value) {
  
  public_key_l_ = value;
  // @@protoc_insertion_point(field_set:com.collaborative.ml.PB_Keys.public_key_l)
}

// repeated .com.collaborative.ml.PB_PublicN public_key_n = 4;
int PB_Keys::public_key_n_size() const {
  return public_key_n_.size();
}
void PB_Keys::clear_public_key_n() {
  public_key_n_.Clear();
}
const ::com::collaborative::ml::PB_PublicN& PB_Keys::public_key_n(int index) const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_Keys.public_key_n)
  return public_key_n_.Get(index);
}
::com::collaborative::ml::PB_PublicN* PB_Keys::mutable_public_key_n(int index) {
  // @@protoc_insertion_point(field_mutable:com.collaborative.ml.PB_Keys.public_key_n)
  return public_key_n_.Mutable(index);
}
::com::collaborative::ml::PB_PublicN* PB_Keys::add_public_key_n() {
  // @@protoc_insertion_point(field_add:com.collaborative.ml.PB_Keys.public_key_n)
  return public_key_n_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_PublicN >*
PB_Keys::mutable_public_key_n() {
  // @@protoc_insertion_point(field_mutable_list:com.collaborative.ml.PB_Keys.public_key_n)
  return &public_key_n_;
}
const ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_PublicN >&
PB_Keys::public_key_n() const {
  // @@protoc_insertion_point(field_list:com.collaborative.ml.PB_Keys.public_key_n)
  return public_key_n_;
}

// optional string public_key_g = 5;
void PB_Keys::clear_public_key_g() {
  public_key_g_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PB_Keys::public_key_g() const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_Keys.public_key_g)
  return public_key_g_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PB_Keys::set_public_key_g(const ::std::string& value) {
  
  public_key_g_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.collaborative.ml.PB_Keys.public_key_g)
}
 void PB_Keys::set_public_key_g(const char* value) {
  
  public_key_g_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.collaborative.ml.PB_Keys.public_key_g)
}
 void PB_Keys::set_public_key_g(const char* value, size_t size) {
  
  public_key_g_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.collaborative.ml.PB_Keys.public_key_g)
}
 ::std::string* PB_Keys::mutable_public_key_g() {
  
  // @@protoc_insertion_point(field_mutable:com.collaborative.ml.PB_Keys.public_key_g)
  return public_key_g_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PB_Keys::release_public_key_g() {
  // @@protoc_insertion_point(field_release:com.collaborative.ml.PB_Keys.public_key_g)
  
  return public_key_g_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PB_Keys::set_allocated_public_key_g(::std::string* public_key_g) {
  if (public_key_g != NULL) {
    
  } else {
    
  }
  public_key_g_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), public_key_g);
  // @@protoc_insertion_point(field_set_allocated:com.collaborative.ml.PB_Keys.public_key_g)
}

// optional string public_key_delta = 6;
void PB_Keys::clear_public_key_delta() {
  public_key_delta_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PB_Keys::public_key_delta() const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_Keys.public_key_delta)
  return public_key_delta_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PB_Keys::set_public_key_delta(const ::std::string& value) {
  
  public_key_delta_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.collaborative.ml.PB_Keys.public_key_delta)
}
 void PB_Keys::set_public_key_delta(const char* value) {
  
  public_key_delta_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.collaborative.ml.PB_Keys.public_key_delta)
}
 void PB_Keys::set_public_key_delta(const char* value, size_t size) {
  
  public_key_delta_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.collaborative.ml.PB_Keys.public_key_delta)
}
 ::std::string* PB_Keys::mutable_public_key_delta() {
  
  // @@protoc_insertion_point(field_mutable:com.collaborative.ml.PB_Keys.public_key_delta)
  return public_key_delta_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PB_Keys::release_public_key_delta() {
  // @@protoc_insertion_point(field_release:com.collaborative.ml.PB_Keys.public_key_delta)
  
  return public_key_delta_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PB_Keys::set_allocated_public_key_delta(::std::string* public_key_delta) {
  if (public_key_delta != NULL) {
    
  } else {
    
  }
  public_key_delta_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), public_key_delta);
  // @@protoc_insertion_point(field_set_allocated:com.collaborative.ml.PB_Keys.public_key_delta)
}

// optional int32 auth_server_i = 7;
void PB_Keys::clear_auth_server_i() {
  auth_server_i_ = 0;
}
 ::google::protobuf::int32 PB_Keys::auth_server_i() const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_Keys.auth_server_i)
  return auth_server_i_;
}
 void PB_Keys::set_auth_server_i(::google::protobuf::int32 value) {
  
  auth_server_i_ = value;
  // @@protoc_insertion_point(field_set:com.collaborative.ml.PB_Keys.auth_server_i)
}

// optional string auth_server_si = 8;
void PB_Keys::clear_auth_server_si() {
  auth_server_si_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PB_Keys::auth_server_si() const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_Keys.auth_server_si)
  return auth_server_si_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PB_Keys::set_auth_server_si(const ::std::string& value) {
  
  auth_server_si_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.collaborative.ml.PB_Keys.auth_server_si)
}
 void PB_Keys::set_auth_server_si(const char* value) {
  
  auth_server_si_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.collaborative.ml.PB_Keys.auth_server_si)
}
 void PB_Keys::set_auth_server_si(const char* value, size_t size) {
  
  auth_server_si_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.collaborative.ml.PB_Keys.auth_server_si)
}
 ::std::string* PB_Keys::mutable_auth_server_si() {
  
  // @@protoc_insertion_point(field_mutable:com.collaborative.ml.PB_Keys.auth_server_si)
  return auth_server_si_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PB_Keys::release_auth_server_si() {
  // @@protoc_insertion_point(field_release:com.collaborative.ml.PB_Keys.auth_server_si)
  
  return auth_server_si_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PB_Keys::set_allocated_auth_server_si(::std::string* auth_server_si) {
  if (auth_server_si != NULL) {
    
  } else {
    
  }
  auth_server_si_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), auth_server_si);
  // @@protoc_insertion_point(field_set_allocated:com.collaborative.ml.PB_Keys.auth_server_si)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_PublicN::kNFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_PublicN::PB_PublicN()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.collaborative.ml.PB_PublicN)
}

void PB_PublicN::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_PublicN::PB_PublicN(const PB_PublicN& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.collaborative.ml.PB_PublicN)
}

void PB_PublicN::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  n_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PB_PublicN::~PB_PublicN() {
  // @@protoc_insertion_point(destructor:com.collaborative.ml.PB_PublicN)
  SharedDtor();
}

void PB_PublicN::SharedDtor() {
  n_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PB_PublicN::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_PublicN::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_PublicN_descriptor_;
}

const PB_PublicN& PB_PublicN::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_keys_2eproto();
  return *default_instance_;
}

PB_PublicN* PB_PublicN::default_instance_ = NULL;

PB_PublicN* PB_PublicN::New(::google::protobuf::Arena* arena) const {
  PB_PublicN* n = new PB_PublicN;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_PublicN::Clear() {
// @@protoc_insertion_point(message_clear_start:com.collaborative.ml.PB_PublicN)
  n_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PB_PublicN::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.collaborative.ml.PB_PublicN)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string n = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_n()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->n().data(), this->n().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.collaborative.ml.PB_PublicN.n"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.collaborative.ml.PB_PublicN)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.collaborative.ml.PB_PublicN)
  return false;
#undef DO_
}

void PB_PublicN::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.collaborative.ml.PB_PublicN)
  // optional string n = 1;
  if (this->n().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->n().data(), this->n().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.collaborative.ml.PB_PublicN.n");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->n(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.collaborative.ml.PB_PublicN)
}

::google::protobuf::uint8* PB_PublicN::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.collaborative.ml.PB_PublicN)
  // optional string n = 1;
  if (this->n().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->n().data(), this->n().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.collaborative.ml.PB_PublicN.n");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->n(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.collaborative.ml.PB_PublicN)
  return target;
}

int PB_PublicN::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.collaborative.ml.PB_PublicN)
  int total_size = 0;

  // optional string n = 1;
  if (this->n().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->n());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_PublicN::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.collaborative.ml.PB_PublicN)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_PublicN* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_PublicN>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.collaborative.ml.PB_PublicN)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.collaborative.ml.PB_PublicN)
    MergeFrom(*source);
  }
}

void PB_PublicN::MergeFrom(const PB_PublicN& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.collaborative.ml.PB_PublicN)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.n().size() > 0) {

    n_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.n_);
  }
}

void PB_PublicN::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.collaborative.ml.PB_PublicN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_PublicN::CopyFrom(const PB_PublicN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.collaborative.ml.PB_PublicN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_PublicN::IsInitialized() const {

  return true;
}

void PB_PublicN::Swap(PB_PublicN* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_PublicN::InternalSwap(PB_PublicN* other) {
  n_.Swap(&other->n_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_PublicN::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_PublicN_descriptor_;
  metadata.reflection = PB_PublicN_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_PublicN

// optional string n = 1;
void PB_PublicN::clear_n() {
  n_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PB_PublicN::n() const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_PublicN.n)
  return n_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PB_PublicN::set_n(const ::std::string& value) {
  
  n_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.collaborative.ml.PB_PublicN.n)
}
 void PB_PublicN::set_n(const char* value) {
  
  n_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.collaborative.ml.PB_PublicN.n)
}
 void PB_PublicN::set_n(const char* value, size_t size) {
  
  n_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.collaborative.ml.PB_PublicN.n)
}
 ::std::string* PB_PublicN::mutable_n() {
  
  // @@protoc_insertion_point(field_mutable:com.collaborative.ml.PB_PublicN.n)
  return n_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PB_PublicN::release_n() {
  // @@protoc_insertion_point(field_release:com.collaborative.ml.PB_PublicN.n)
  
  return n_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PB_PublicN::set_allocated_n(::std::string* n) {
  if (n != NULL) {
    
  } else {
    
  }
  n_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), n);
  // @@protoc_insertion_point(field_set_allocated:com.collaborative.ml.PB_PublicN.n)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ml
}  // namespace collaborative
}  // namespace com

// @@protoc_insertion_point(global_scope)

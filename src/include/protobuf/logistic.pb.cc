// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: logistic.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "logistic.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace collaborative {
namespace ml {

namespace {

const ::google::protobuf::Descriptor* PB_BatchIds_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_BatchIds_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_BatchSums_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_BatchSums_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_BatchLosses_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_BatchLosses_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_logistic_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_logistic_2eproto() {
  protobuf_AddDesc_logistic_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "logistic.proto");
  GOOGLE_CHECK(file != NULL);
  PB_BatchIds_descriptor_ = file->message_type(0);
  static const int PB_BatchIds_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_BatchIds, batch_id_),
  };
  PB_BatchIds_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_BatchIds_descriptor_,
      PB_BatchIds::default_instance_,
      PB_BatchIds_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_BatchIds),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_BatchIds, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_BatchIds, _is_default_instance_));
  PB_BatchSums_descriptor_ = file->message_type(1);
  static const int PB_BatchSums_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_BatchSums, batch_sum_),
  };
  PB_BatchSums_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_BatchSums_descriptor_,
      PB_BatchSums::default_instance_,
      PB_BatchSums_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_BatchSums),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_BatchSums, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_BatchSums, _is_default_instance_));
  PB_BatchLosses_descriptor_ = file->message_type(2);
  static const int PB_BatchLosses_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_BatchLosses, batch_loss_),
  };
  PB_BatchLosses_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_BatchLosses_descriptor_,
      PB_BatchLosses::default_instance_,
      PB_BatchLosses_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_BatchLosses),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_BatchLosses, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_BatchLosses, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_logistic_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_BatchIds_descriptor_, &PB_BatchIds::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_BatchSums_descriptor_, &PB_BatchSums::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_BatchLosses_descriptor_, &PB_BatchLosses::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_logistic_2eproto() {
  delete PB_BatchIds::default_instance_;
  delete PB_BatchIds_reflection_;
  delete PB_BatchSums::default_instance_;
  delete PB_BatchSums_reflection_;
  delete PB_BatchLosses::default_instance_;
  delete PB_BatchLosses_reflection_;
}

void protobuf_AddDesc_logistic_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_logistic_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::com::collaborative::ml::protobuf_AddDesc_common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016logistic.proto\022\024com.collaborative.ml\032\014"
    "common.proto\"\037\n\013PB_BatchIds\022\020\n\010batch_id\030"
    "\001 \003(\005\"I\n\014PB_BatchSums\0229\n\tbatch_sum\030\001 \003(\013"
    "2&.com.collaborative.ml.PB_EncodedNumber"
    "\"L\n\016PB_BatchLosses\022:\n\nbatch_loss\030\001 \003(\0132&"
    ".com.collaborative.ml.PB_EncodedNumberb\006"
    "proto3", 246);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "logistic.proto", &protobuf_RegisterTypes);
  PB_BatchIds::default_instance_ = new PB_BatchIds();
  PB_BatchSums::default_instance_ = new PB_BatchSums();
  PB_BatchLosses::default_instance_ = new PB_BatchLosses();
  PB_BatchIds::default_instance_->InitAsDefaultInstance();
  PB_BatchSums::default_instance_->InitAsDefaultInstance();
  PB_BatchLosses::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_logistic_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_logistic_2eproto {
  StaticDescriptorInitializer_logistic_2eproto() {
    protobuf_AddDesc_logistic_2eproto();
  }
} static_descriptor_initializer_logistic_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_BatchIds::kBatchIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_BatchIds::PB_BatchIds()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.collaborative.ml.PB_BatchIds)
}

void PB_BatchIds::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_BatchIds::PB_BatchIds(const PB_BatchIds& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.collaborative.ml.PB_BatchIds)
}

void PB_BatchIds::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_BatchIds::~PB_BatchIds() {
  // @@protoc_insertion_point(destructor:com.collaborative.ml.PB_BatchIds)
  SharedDtor();
}

void PB_BatchIds::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_BatchIds::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_BatchIds::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_BatchIds_descriptor_;
}

const PB_BatchIds& PB_BatchIds::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_logistic_2eproto();
  return *default_instance_;
}

PB_BatchIds* PB_BatchIds::default_instance_ = NULL;

PB_BatchIds* PB_BatchIds::New(::google::protobuf::Arena* arena) const {
  PB_BatchIds* n = new PB_BatchIds;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_BatchIds::Clear() {
// @@protoc_insertion_point(message_clear_start:com.collaborative.ml.PB_BatchIds)
  batch_id_.Clear();
}

bool PB_BatchIds::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.collaborative.ml.PB_BatchIds)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 batch_id = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_batch_id())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10, input, this->mutable_batch_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.collaborative.ml.PB_BatchIds)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.collaborative.ml.PB_BatchIds)
  return false;
#undef DO_
}

void PB_BatchIds::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.collaborative.ml.PB_BatchIds)
  // repeated int32 batch_id = 1;
  if (this->batch_id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_batch_id_cached_byte_size_);
  }
  for (int i = 0; i < this->batch_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->batch_id(i), output);
  }

  // @@protoc_insertion_point(serialize_end:com.collaborative.ml.PB_BatchIds)
}

::google::protobuf::uint8* PB_BatchIds::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.collaborative.ml.PB_BatchIds)
  // repeated int32 batch_id = 1;
  if (this->batch_id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _batch_id_cached_byte_size_, target);
  }
  for (int i = 0; i < this->batch_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->batch_id(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.collaborative.ml.PB_BatchIds)
  return target;
}

int PB_BatchIds::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.collaborative.ml.PB_BatchIds)
  int total_size = 0;

  // repeated int32 batch_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->batch_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->batch_id(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _batch_id_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_BatchIds::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.collaborative.ml.PB_BatchIds)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_BatchIds* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_BatchIds>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.collaborative.ml.PB_BatchIds)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.collaborative.ml.PB_BatchIds)
    MergeFrom(*source);
  }
}

void PB_BatchIds::MergeFrom(const PB_BatchIds& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.collaborative.ml.PB_BatchIds)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  batch_id_.MergeFrom(from.batch_id_);
}

void PB_BatchIds::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.collaborative.ml.PB_BatchIds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_BatchIds::CopyFrom(const PB_BatchIds& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.collaborative.ml.PB_BatchIds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_BatchIds::IsInitialized() const {

  return true;
}

void PB_BatchIds::Swap(PB_BatchIds* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_BatchIds::InternalSwap(PB_BatchIds* other) {
  batch_id_.UnsafeArenaSwap(&other->batch_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_BatchIds::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_BatchIds_descriptor_;
  metadata.reflection = PB_BatchIds_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_BatchIds

// repeated int32 batch_id = 1;
int PB_BatchIds::batch_id_size() const {
  return batch_id_.size();
}
void PB_BatchIds::clear_batch_id() {
  batch_id_.Clear();
}
 ::google::protobuf::int32 PB_BatchIds::batch_id(int index) const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_BatchIds.batch_id)
  return batch_id_.Get(index);
}
 void PB_BatchIds::set_batch_id(int index, ::google::protobuf::int32 value) {
  batch_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.collaborative.ml.PB_BatchIds.batch_id)
}
 void PB_BatchIds::add_batch_id(::google::protobuf::int32 value) {
  batch_id_.Add(value);
  // @@protoc_insertion_point(field_add:com.collaborative.ml.PB_BatchIds.batch_id)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PB_BatchIds::batch_id() const {
  // @@protoc_insertion_point(field_list:com.collaborative.ml.PB_BatchIds.batch_id)
  return batch_id_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PB_BatchIds::mutable_batch_id() {
  // @@protoc_insertion_point(field_mutable_list:com.collaborative.ml.PB_BatchIds.batch_id)
  return &batch_id_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_BatchSums::kBatchSumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_BatchSums::PB_BatchSums()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.collaborative.ml.PB_BatchSums)
}

void PB_BatchSums::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_BatchSums::PB_BatchSums(const PB_BatchSums& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.collaborative.ml.PB_BatchSums)
}

void PB_BatchSums::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_BatchSums::~PB_BatchSums() {
  // @@protoc_insertion_point(destructor:com.collaborative.ml.PB_BatchSums)
  SharedDtor();
}

void PB_BatchSums::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_BatchSums::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_BatchSums::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_BatchSums_descriptor_;
}

const PB_BatchSums& PB_BatchSums::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_logistic_2eproto();
  return *default_instance_;
}

PB_BatchSums* PB_BatchSums::default_instance_ = NULL;

PB_BatchSums* PB_BatchSums::New(::google::protobuf::Arena* arena) const {
  PB_BatchSums* n = new PB_BatchSums;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_BatchSums::Clear() {
// @@protoc_insertion_point(message_clear_start:com.collaborative.ml.PB_BatchSums)
  batch_sum_.Clear();
}

bool PB_BatchSums::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.collaborative.ml.PB_BatchSums)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.collaborative.ml.PB_EncodedNumber batch_sum = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_batch_sum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_batch_sum()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_batch_sum;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.collaborative.ml.PB_BatchSums)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.collaborative.ml.PB_BatchSums)
  return false;
#undef DO_
}

void PB_BatchSums::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.collaborative.ml.PB_BatchSums)
  // repeated .com.collaborative.ml.PB_EncodedNumber batch_sum = 1;
  for (unsigned int i = 0, n = this->batch_sum_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->batch_sum(i), output);
  }

  // @@protoc_insertion_point(serialize_end:com.collaborative.ml.PB_BatchSums)
}

::google::protobuf::uint8* PB_BatchSums::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.collaborative.ml.PB_BatchSums)
  // repeated .com.collaborative.ml.PB_EncodedNumber batch_sum = 1;
  for (unsigned int i = 0, n = this->batch_sum_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->batch_sum(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.collaborative.ml.PB_BatchSums)
  return target;
}

int PB_BatchSums::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.collaborative.ml.PB_BatchSums)
  int total_size = 0;

  // repeated .com.collaborative.ml.PB_EncodedNumber batch_sum = 1;
  total_size += 1 * this->batch_sum_size();
  for (int i = 0; i < this->batch_sum_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->batch_sum(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_BatchSums::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.collaborative.ml.PB_BatchSums)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_BatchSums* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_BatchSums>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.collaborative.ml.PB_BatchSums)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.collaborative.ml.PB_BatchSums)
    MergeFrom(*source);
  }
}

void PB_BatchSums::MergeFrom(const PB_BatchSums& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.collaborative.ml.PB_BatchSums)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  batch_sum_.MergeFrom(from.batch_sum_);
}

void PB_BatchSums::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.collaborative.ml.PB_BatchSums)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_BatchSums::CopyFrom(const PB_BatchSums& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.collaborative.ml.PB_BatchSums)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_BatchSums::IsInitialized() const {

  return true;
}

void PB_BatchSums::Swap(PB_BatchSums* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_BatchSums::InternalSwap(PB_BatchSums* other) {
  batch_sum_.UnsafeArenaSwap(&other->batch_sum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_BatchSums::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_BatchSums_descriptor_;
  metadata.reflection = PB_BatchSums_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_BatchSums

// repeated .com.collaborative.ml.PB_EncodedNumber batch_sum = 1;
int PB_BatchSums::batch_sum_size() const {
  return batch_sum_.size();
}
void PB_BatchSums::clear_batch_sum() {
  batch_sum_.Clear();
}
const ::com::collaborative::ml::PB_EncodedNumber& PB_BatchSums::batch_sum(int index) const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_BatchSums.batch_sum)
  return batch_sum_.Get(index);
}
::com::collaborative::ml::PB_EncodedNumber* PB_BatchSums::mutable_batch_sum(int index) {
  // @@protoc_insertion_point(field_mutable:com.collaborative.ml.PB_BatchSums.batch_sum)
  return batch_sum_.Mutable(index);
}
::com::collaborative::ml::PB_EncodedNumber* PB_BatchSums::add_batch_sum() {
  // @@protoc_insertion_point(field_add:com.collaborative.ml.PB_BatchSums.batch_sum)
  return batch_sum_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >*
PB_BatchSums::mutable_batch_sum() {
  // @@protoc_insertion_point(field_mutable_list:com.collaborative.ml.PB_BatchSums.batch_sum)
  return &batch_sum_;
}
const ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >&
PB_BatchSums::batch_sum() const {
  // @@protoc_insertion_point(field_list:com.collaborative.ml.PB_BatchSums.batch_sum)
  return batch_sum_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_BatchLosses::kBatchLossFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_BatchLosses::PB_BatchLosses()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.collaborative.ml.PB_BatchLosses)
}

void PB_BatchLosses::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_BatchLosses::PB_BatchLosses(const PB_BatchLosses& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.collaborative.ml.PB_BatchLosses)
}

void PB_BatchLosses::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_BatchLosses::~PB_BatchLosses() {
  // @@protoc_insertion_point(destructor:com.collaborative.ml.PB_BatchLosses)
  SharedDtor();
}

void PB_BatchLosses::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_BatchLosses::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_BatchLosses::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_BatchLosses_descriptor_;
}

const PB_BatchLosses& PB_BatchLosses::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_logistic_2eproto();
  return *default_instance_;
}

PB_BatchLosses* PB_BatchLosses::default_instance_ = NULL;

PB_BatchLosses* PB_BatchLosses::New(::google::protobuf::Arena* arena) const {
  PB_BatchLosses* n = new PB_BatchLosses;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_BatchLosses::Clear() {
// @@protoc_insertion_point(message_clear_start:com.collaborative.ml.PB_BatchLosses)
  batch_loss_.Clear();
}

bool PB_BatchLosses::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.collaborative.ml.PB_BatchLosses)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.collaborative.ml.PB_EncodedNumber batch_loss = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_batch_loss:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_batch_loss()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_batch_loss;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.collaborative.ml.PB_BatchLosses)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.collaborative.ml.PB_BatchLosses)
  return false;
#undef DO_
}

void PB_BatchLosses::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.collaborative.ml.PB_BatchLosses)
  // repeated .com.collaborative.ml.PB_EncodedNumber batch_loss = 1;
  for (unsigned int i = 0, n = this->batch_loss_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->batch_loss(i), output);
  }

  // @@protoc_insertion_point(serialize_end:com.collaborative.ml.PB_BatchLosses)
}

::google::protobuf::uint8* PB_BatchLosses::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.collaborative.ml.PB_BatchLosses)
  // repeated .com.collaborative.ml.PB_EncodedNumber batch_loss = 1;
  for (unsigned int i = 0, n = this->batch_loss_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->batch_loss(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.collaborative.ml.PB_BatchLosses)
  return target;
}

int PB_BatchLosses::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.collaborative.ml.PB_BatchLosses)
  int total_size = 0;

  // repeated .com.collaborative.ml.PB_EncodedNumber batch_loss = 1;
  total_size += 1 * this->batch_loss_size();
  for (int i = 0; i < this->batch_loss_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->batch_loss(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_BatchLosses::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.collaborative.ml.PB_BatchLosses)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_BatchLosses* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_BatchLosses>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.collaborative.ml.PB_BatchLosses)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.collaborative.ml.PB_BatchLosses)
    MergeFrom(*source);
  }
}

void PB_BatchLosses::MergeFrom(const PB_BatchLosses& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.collaborative.ml.PB_BatchLosses)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  batch_loss_.MergeFrom(from.batch_loss_);
}

void PB_BatchLosses::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.collaborative.ml.PB_BatchLosses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_BatchLosses::CopyFrom(const PB_BatchLosses& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.collaborative.ml.PB_BatchLosses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_BatchLosses::IsInitialized() const {

  return true;
}

void PB_BatchLosses::Swap(PB_BatchLosses* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_BatchLosses::InternalSwap(PB_BatchLosses* other) {
  batch_loss_.UnsafeArenaSwap(&other->batch_loss_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_BatchLosses::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_BatchLosses_descriptor_;
  metadata.reflection = PB_BatchLosses_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_BatchLosses

// repeated .com.collaborative.ml.PB_EncodedNumber batch_loss = 1;
int PB_BatchLosses::batch_loss_size() const {
  return batch_loss_.size();
}
void PB_BatchLosses::clear_batch_loss() {
  batch_loss_.Clear();
}
const ::com::collaborative::ml::PB_EncodedNumber& PB_BatchLosses::batch_loss(int index) const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_BatchLosses.batch_loss)
  return batch_loss_.Get(index);
}
::com::collaborative::ml::PB_EncodedNumber* PB_BatchLosses::mutable_batch_loss(int index) {
  // @@protoc_insertion_point(field_mutable:com.collaborative.ml.PB_BatchLosses.batch_loss)
  return batch_loss_.Mutable(index);
}
::com::collaborative::ml::PB_EncodedNumber* PB_BatchLosses::add_batch_loss() {
  // @@protoc_insertion_point(field_add:com.collaborative.ml.PB_BatchLosses.batch_loss)
  return batch_loss_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >*
PB_BatchLosses::mutable_batch_loss() {
  // @@protoc_insertion_point(field_mutable_list:com.collaborative.ml.PB_BatchLosses.batch_loss)
  return &batch_loss_;
}
const ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >&
PB_BatchLosses::batch_loss() const {
  // @@protoc_insertion_point(field_list:com.collaborative.ml.PB_BatchLosses.batch_loss)
  return batch_loss_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ml
}  // namespace collaborative
}  // namespace com

// @@protoc_insertion_point(global_scope)

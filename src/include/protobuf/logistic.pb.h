// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: logistic.proto

#ifndef PROTOBUF_logistic_2eproto__INCLUDED
#define PROTOBUF_logistic_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace com {
namespace collaborative {
namespace ml {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_logistic_2eproto();
void protobuf_AssignDesc_logistic_2eproto();
void protobuf_ShutdownFile_logistic_2eproto();

class PB_BatchIds;
class PB_BatchLosses;
class PB_BatchSums;

// ===================================================================

class PB_BatchIds : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.collaborative.ml.PB_BatchIds) */ {
 public:
  PB_BatchIds();
  virtual ~PB_BatchIds();

  PB_BatchIds(const PB_BatchIds& from);

  inline PB_BatchIds& operator=(const PB_BatchIds& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_BatchIds& default_instance();

  void Swap(PB_BatchIds* other);

  // implements Message ----------------------------------------------

  inline PB_BatchIds* New() const { return New(NULL); }

  PB_BatchIds* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_BatchIds& from);
  void MergeFrom(const PB_BatchIds& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PB_BatchIds* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 batch_id = 1;
  int batch_id_size() const;
  void clear_batch_id();
  static const int kBatchIdFieldNumber = 1;
  ::google::protobuf::int32 batch_id(int index) const;
  void set_batch_id(int index, ::google::protobuf::int32 value);
  void add_batch_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      batch_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_batch_id();

  // @@protoc_insertion_point(class_scope:com.collaborative.ml.PB_BatchIds)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > batch_id_;
  mutable int _batch_id_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_logistic_2eproto();
  friend void protobuf_AssignDesc_logistic_2eproto();
  friend void protobuf_ShutdownFile_logistic_2eproto();

  void InitAsDefaultInstance();
  static PB_BatchIds* default_instance_;
};
// -------------------------------------------------------------------

class PB_BatchSums : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.collaborative.ml.PB_BatchSums) */ {
 public:
  PB_BatchSums();
  virtual ~PB_BatchSums();

  PB_BatchSums(const PB_BatchSums& from);

  inline PB_BatchSums& operator=(const PB_BatchSums& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_BatchSums& default_instance();

  void Swap(PB_BatchSums* other);

  // implements Message ----------------------------------------------

  inline PB_BatchSums* New() const { return New(NULL); }

  PB_BatchSums* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_BatchSums& from);
  void MergeFrom(const PB_BatchSums& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PB_BatchSums* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.collaborative.ml.PB_EncodedNumber batch_sum = 1;
  int batch_sum_size() const;
  void clear_batch_sum();
  static const int kBatchSumFieldNumber = 1;
  const ::com::collaborative::ml::PB_EncodedNumber& batch_sum(int index) const;
  ::com::collaborative::ml::PB_EncodedNumber* mutable_batch_sum(int index);
  ::com::collaborative::ml::PB_EncodedNumber* add_batch_sum();
  ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >*
      mutable_batch_sum();
  const ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >&
      batch_sum() const;

  // @@protoc_insertion_point(class_scope:com.collaborative.ml.PB_BatchSums)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber > batch_sum_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_logistic_2eproto();
  friend void protobuf_AssignDesc_logistic_2eproto();
  friend void protobuf_ShutdownFile_logistic_2eproto();

  void InitAsDefaultInstance();
  static PB_BatchSums* default_instance_;
};
// -------------------------------------------------------------------

class PB_BatchLosses : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.collaborative.ml.PB_BatchLosses) */ {
 public:
  PB_BatchLosses();
  virtual ~PB_BatchLosses();

  PB_BatchLosses(const PB_BatchLosses& from);

  inline PB_BatchLosses& operator=(const PB_BatchLosses& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_BatchLosses& default_instance();

  void Swap(PB_BatchLosses* other);

  // implements Message ----------------------------------------------

  inline PB_BatchLosses* New() const { return New(NULL); }

  PB_BatchLosses* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_BatchLosses& from);
  void MergeFrom(const PB_BatchLosses& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PB_BatchLosses* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.collaborative.ml.PB_EncodedNumber batch_loss = 1;
  int batch_loss_size() const;
  void clear_batch_loss();
  static const int kBatchLossFieldNumber = 1;
  const ::com::collaborative::ml::PB_EncodedNumber& batch_loss(int index) const;
  ::com::collaborative::ml::PB_EncodedNumber* mutable_batch_loss(int index);
  ::com::collaborative::ml::PB_EncodedNumber* add_batch_loss();
  ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >*
      mutable_batch_loss();
  const ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >&
      batch_loss() const;

  // @@protoc_insertion_point(class_scope:com.collaborative.ml.PB_BatchLosses)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber > batch_loss_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_logistic_2eproto();
  friend void protobuf_AssignDesc_logistic_2eproto();
  friend void protobuf_ShutdownFile_logistic_2eproto();

  void InitAsDefaultInstance();
  static PB_BatchLosses* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_BatchIds

// repeated int32 batch_id = 1;
inline int PB_BatchIds::batch_id_size() const {
  return batch_id_.size();
}
inline void PB_BatchIds::clear_batch_id() {
  batch_id_.Clear();
}
inline ::google::protobuf::int32 PB_BatchIds::batch_id(int index) const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_BatchIds.batch_id)
  return batch_id_.Get(index);
}
inline void PB_BatchIds::set_batch_id(int index, ::google::protobuf::int32 value) {
  batch_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.collaborative.ml.PB_BatchIds.batch_id)
}
inline void PB_BatchIds::add_batch_id(::google::protobuf::int32 value) {
  batch_id_.Add(value);
  // @@protoc_insertion_point(field_add:com.collaborative.ml.PB_BatchIds.batch_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PB_BatchIds::batch_id() const {
  // @@protoc_insertion_point(field_list:com.collaborative.ml.PB_BatchIds.batch_id)
  return batch_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PB_BatchIds::mutable_batch_id() {
  // @@protoc_insertion_point(field_mutable_list:com.collaborative.ml.PB_BatchIds.batch_id)
  return &batch_id_;
}

// -------------------------------------------------------------------

// PB_BatchSums

// repeated .com.collaborative.ml.PB_EncodedNumber batch_sum = 1;
inline int PB_BatchSums::batch_sum_size() const {
  return batch_sum_.size();
}
inline void PB_BatchSums::clear_batch_sum() {
  batch_sum_.Clear();
}
inline const ::com::collaborative::ml::PB_EncodedNumber& PB_BatchSums::batch_sum(int index) const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_BatchSums.batch_sum)
  return batch_sum_.Get(index);
}
inline ::com::collaborative::ml::PB_EncodedNumber* PB_BatchSums::mutable_batch_sum(int index) {
  // @@protoc_insertion_point(field_mutable:com.collaborative.ml.PB_BatchSums.batch_sum)
  return batch_sum_.Mutable(index);
}
inline ::com::collaborative::ml::PB_EncodedNumber* PB_BatchSums::add_batch_sum() {
  // @@protoc_insertion_point(field_add:com.collaborative.ml.PB_BatchSums.batch_sum)
  return batch_sum_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >*
PB_BatchSums::mutable_batch_sum() {
  // @@protoc_insertion_point(field_mutable_list:com.collaborative.ml.PB_BatchSums.batch_sum)
  return &batch_sum_;
}
inline const ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >&
PB_BatchSums::batch_sum() const {
  // @@protoc_insertion_point(field_list:com.collaborative.ml.PB_BatchSums.batch_sum)
  return batch_sum_;
}

// -------------------------------------------------------------------

// PB_BatchLosses

// repeated .com.collaborative.ml.PB_EncodedNumber batch_loss = 1;
inline int PB_BatchLosses::batch_loss_size() const {
  return batch_loss_.size();
}
inline void PB_BatchLosses::clear_batch_loss() {
  batch_loss_.Clear();
}
inline const ::com::collaborative::ml::PB_EncodedNumber& PB_BatchLosses::batch_loss(int index) const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_BatchLosses.batch_loss)
  return batch_loss_.Get(index);
}
inline ::com::collaborative::ml::PB_EncodedNumber* PB_BatchLosses::mutable_batch_loss(int index) {
  // @@protoc_insertion_point(field_mutable:com.collaborative.ml.PB_BatchLosses.batch_loss)
  return batch_loss_.Mutable(index);
}
inline ::com::collaborative::ml::PB_EncodedNumber* PB_BatchLosses::add_batch_loss() {
  // @@protoc_insertion_point(field_add:com.collaborative.ml.PB_BatchLosses.batch_loss)
  return batch_loss_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >*
PB_BatchLosses::mutable_batch_loss() {
  // @@protoc_insertion_point(field_mutable_list:com.collaborative.ml.PB_BatchLosses.batch_loss)
  return &batch_loss_;
}
inline const ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >&
PB_BatchLosses::batch_loss() const {
  // @@protoc_insertion_point(field_list:com.collaborative.ml.PB_BatchLosses.batch_loss)
  return batch_loss_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ml
}  // namespace collaborative
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_logistic_2eproto__INCLUDED

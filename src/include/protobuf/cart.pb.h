// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cart.proto

#ifndef PROTOBUF_cart_2eproto__INCLUDED
#define PROTOBUF_cart_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace com {
namespace collaborative {
namespace ml {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_cart_2eproto();
void protobuf_AssignDesc_cart_2eproto();
void protobuf_ShutdownFile_cart_2eproto();

class PB_EncryptedLabelVec;
class PB_EncryptedLabelVector;
class PB_EncryptedStatPerSplit;
class PB_EncryptedStatistics;
class PB_PruneCheckResult;
class PB_PruneConditionResult;
class PB_SplitInfo;
class PB_UpdateInfo;

// ===================================================================

class PB_EncryptedLabelVec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.collaborative.ml.PB_EncryptedLabelVec) */ {
 public:
  PB_EncryptedLabelVec();
  virtual ~PB_EncryptedLabelVec();

  PB_EncryptedLabelVec(const PB_EncryptedLabelVec& from);

  inline PB_EncryptedLabelVec& operator=(const PB_EncryptedLabelVec& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_EncryptedLabelVec& default_instance();

  void Swap(PB_EncryptedLabelVec* other);

  // implements Message ----------------------------------------------

  inline PB_EncryptedLabelVec* New() const { return New(NULL); }

  PB_EncryptedLabelVec* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_EncryptedLabelVec& from);
  void MergeFrom(const PB_EncryptedLabelVec& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PB_EncryptedLabelVec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.collaborative.ml.PB_EncodedNumber encrypted_label = 1;
  int encrypted_label_size() const;
  void clear_encrypted_label();
  static const int kEncryptedLabelFieldNumber = 1;
  const ::com::collaborative::ml::PB_EncodedNumber& encrypted_label(int index) const;
  ::com::collaborative::ml::PB_EncodedNumber* mutable_encrypted_label(int index);
  ::com::collaborative::ml::PB_EncodedNumber* add_encrypted_label();
  ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >*
      mutable_encrypted_label();
  const ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >&
      encrypted_label() const;

  // @@protoc_insertion_point(class_scope:com.collaborative.ml.PB_EncryptedLabelVec)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber > encrypted_label_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_cart_2eproto();
  friend void protobuf_AssignDesc_cart_2eproto();
  friend void protobuf_ShutdownFile_cart_2eproto();

  void InitAsDefaultInstance();
  static PB_EncryptedLabelVec* default_instance_;
};
// -------------------------------------------------------------------

class PB_PruneConditionResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.collaborative.ml.PB_PruneConditionResult) */ {
 public:
  PB_PruneConditionResult();
  virtual ~PB_PruneConditionResult();

  PB_PruneConditionResult(const PB_PruneConditionResult& from);

  inline PB_PruneConditionResult& operator=(const PB_PruneConditionResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_PruneConditionResult& default_instance();

  void Swap(PB_PruneConditionResult* other);

  // implements Message ----------------------------------------------

  inline PB_PruneConditionResult* New() const { return New(NULL); }

  PB_PruneConditionResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_PruneConditionResult& from);
  void MergeFrom(const PB_PruneConditionResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PB_PruneConditionResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 node_index = 1;
  void clear_node_index();
  static const int kNodeIndexFieldNumber = 1;
  ::google::protobuf::int32 node_index() const;
  void set_node_index(::google::protobuf::int32 value);

  // optional int32 pruning_satisfied = 2;
  void clear_pruning_satisfied();
  static const int kPruningSatisfiedFieldNumber = 2;
  ::google::protobuf::int32 pruning_satisfied() const;
  void set_pruning_satisfied(::google::protobuf::int32 value);

  // repeated .com.collaborative.ml.PB_EncryptedLabelVec encrypted_label_vec = 3;
  int encrypted_label_vec_size() const;
  void clear_encrypted_label_vec();
  static const int kEncryptedLabelVecFieldNumber = 3;
  const ::com::collaborative::ml::PB_EncryptedLabelVec& encrypted_label_vec(int index) const;
  ::com::collaborative::ml::PB_EncryptedLabelVec* mutable_encrypted_label_vec(int index);
  ::com::collaborative::ml::PB_EncryptedLabelVec* add_encrypted_label_vec();
  ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncryptedLabelVec >*
      mutable_encrypted_label_vec();
  const ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncryptedLabelVec >&
      encrypted_label_vec() const;

  // optional .com.collaborative.ml.PB_EncodedNumber label = 4;
  bool has_label() const;
  void clear_label();
  static const int kLabelFieldNumber = 4;
  const ::com::collaborative::ml::PB_EncodedNumber& label() const;
  ::com::collaborative::ml::PB_EncodedNumber* mutable_label();
  ::com::collaborative::ml::PB_EncodedNumber* release_label();
  void set_allocated_label(::com::collaborative::ml::PB_EncodedNumber* label);

  // @@protoc_insertion_point(class_scope:com.collaborative.ml.PB_PruneConditionResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 node_index_;
  ::google::protobuf::int32 pruning_satisfied_;
  ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncryptedLabelVec > encrypted_label_vec_;
  ::com::collaborative::ml::PB_EncodedNumber* label_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_cart_2eproto();
  friend void protobuf_AssignDesc_cart_2eproto();
  friend void protobuf_ShutdownFile_cart_2eproto();

  void InitAsDefaultInstance();
  static PB_PruneConditionResult* default_instance_;
};
// -------------------------------------------------------------------

class PB_PruneCheckResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.collaborative.ml.PB_PruneCheckResult) */ {
 public:
  PB_PruneCheckResult();
  virtual ~PB_PruneCheckResult();

  PB_PruneCheckResult(const PB_PruneCheckResult& from);

  inline PB_PruneCheckResult& operator=(const PB_PruneCheckResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_PruneCheckResult& default_instance();

  void Swap(PB_PruneCheckResult* other);

  // implements Message ----------------------------------------------

  inline PB_PruneCheckResult* New() const { return New(NULL); }

  PB_PruneCheckResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_PruneCheckResult& from);
  void MergeFrom(const PB_PruneCheckResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PB_PruneCheckResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 node_index = 1;
  void clear_node_index();
  static const int kNodeIndexFieldNumber = 1;
  ::google::protobuf::int32 node_index() const;
  void set_node_index(::google::protobuf::int32 value);

  // optional int32 is_satisfied = 2;
  void clear_is_satisfied();
  static const int kIsSatisfiedFieldNumber = 2;
  ::google::protobuf::int32 is_satisfied() const;
  void set_is_satisfied(::google::protobuf::int32 value);

  // optional .com.collaborative.ml.PB_EncodedNumber label = 3;
  bool has_label() const;
  void clear_label();
  static const int kLabelFieldNumber = 3;
  const ::com::collaborative::ml::PB_EncodedNumber& label() const;
  ::com::collaborative::ml::PB_EncodedNumber* mutable_label();
  ::com::collaborative::ml::PB_EncodedNumber* release_label();
  void set_allocated_label(::com::collaborative::ml::PB_EncodedNumber* label);

  // @@protoc_insertion_point(class_scope:com.collaborative.ml.PB_PruneCheckResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 node_index_;
  ::google::protobuf::int32 is_satisfied_;
  ::com::collaborative::ml::PB_EncodedNumber* label_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_cart_2eproto();
  friend void protobuf_AssignDesc_cart_2eproto();
  friend void protobuf_ShutdownFile_cart_2eproto();

  void InitAsDefaultInstance();
  static PB_PruneCheckResult* default_instance_;
};
// -------------------------------------------------------------------

class PB_EncryptedLabelVector : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.collaborative.ml.PB_EncryptedLabelVector) */ {
 public:
  PB_EncryptedLabelVector();
  virtual ~PB_EncryptedLabelVector();

  PB_EncryptedLabelVector(const PB_EncryptedLabelVector& from);

  inline PB_EncryptedLabelVector& operator=(const PB_EncryptedLabelVector& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_EncryptedLabelVector& default_instance();

  void Swap(PB_EncryptedLabelVector* other);

  // implements Message ----------------------------------------------

  inline PB_EncryptedLabelVector* New() const { return New(NULL); }

  PB_EncryptedLabelVector* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_EncryptedLabelVector& from);
  void MergeFrom(const PB_EncryptedLabelVector& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PB_EncryptedLabelVector* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.collaborative.ml.PB_EncodedNumber label_indicator = 1;
  int label_indicator_size() const;
  void clear_label_indicator();
  static const int kLabelIndicatorFieldNumber = 1;
  const ::com::collaborative::ml::PB_EncodedNumber& label_indicator(int index) const;
  ::com::collaborative::ml::PB_EncodedNumber* mutable_label_indicator(int index);
  ::com::collaborative::ml::PB_EncodedNumber* add_label_indicator();
  ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >*
      mutable_label_indicator();
  const ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >&
      label_indicator() const;

  // @@protoc_insertion_point(class_scope:com.collaborative.ml.PB_EncryptedLabelVector)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber > label_indicator_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_cart_2eproto();
  friend void protobuf_AssignDesc_cart_2eproto();
  friend void protobuf_ShutdownFile_cart_2eproto();

  void InitAsDefaultInstance();
  static PB_EncryptedLabelVector* default_instance_;
};
// -------------------------------------------------------------------

class PB_EncryptedStatPerSplit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.collaborative.ml.PB_EncryptedStatPerSplit) */ {
 public:
  PB_EncryptedStatPerSplit();
  virtual ~PB_EncryptedStatPerSplit();

  PB_EncryptedStatPerSplit(const PB_EncryptedStatPerSplit& from);

  inline PB_EncryptedStatPerSplit& operator=(const PB_EncryptedStatPerSplit& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_EncryptedStatPerSplit& default_instance();

  void Swap(PB_EncryptedStatPerSplit* other);

  // implements Message ----------------------------------------------

  inline PB_EncryptedStatPerSplit* New() const { return New(NULL); }

  PB_EncryptedStatPerSplit* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_EncryptedStatPerSplit& from);
  void MergeFrom(const PB_EncryptedStatPerSplit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PB_EncryptedStatPerSplit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.collaborative.ml.PB_EncodedNumber encrypted_stat = 1;
  int encrypted_stat_size() const;
  void clear_encrypted_stat();
  static const int kEncryptedStatFieldNumber = 1;
  const ::com::collaborative::ml::PB_EncodedNumber& encrypted_stat(int index) const;
  ::com::collaborative::ml::PB_EncodedNumber* mutable_encrypted_stat(int index);
  ::com::collaborative::ml::PB_EncodedNumber* add_encrypted_stat();
  ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >*
      mutable_encrypted_stat();
  const ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >&
      encrypted_stat() const;

  // @@protoc_insertion_point(class_scope:com.collaborative.ml.PB_EncryptedStatPerSplit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber > encrypted_stat_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_cart_2eproto();
  friend void protobuf_AssignDesc_cart_2eproto();
  friend void protobuf_ShutdownFile_cart_2eproto();

  void InitAsDefaultInstance();
  static PB_EncryptedStatPerSplit* default_instance_;
};
// -------------------------------------------------------------------

class PB_EncryptedStatistics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.collaborative.ml.PB_EncryptedStatistics) */ {
 public:
  PB_EncryptedStatistics();
  virtual ~PB_EncryptedStatistics();

  PB_EncryptedStatistics(const PB_EncryptedStatistics& from);

  inline PB_EncryptedStatistics& operator=(const PB_EncryptedStatistics& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_EncryptedStatistics& default_instance();

  void Swap(PB_EncryptedStatistics* other);

  // implements Message ----------------------------------------------

  inline PB_EncryptedStatistics* New() const { return New(NULL); }

  PB_EncryptedStatistics* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_EncryptedStatistics& from);
  void MergeFrom(const PB_EncryptedStatistics& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PB_EncryptedStatistics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // optional int32 node_index = 2;
  void clear_node_index();
  static const int kNodeIndexFieldNumber = 2;
  ::google::protobuf::int32 node_index() const;
  void set_node_index(::google::protobuf::int32 value);

  // optional int32 local_split_num = 3;
  void clear_local_split_num();
  static const int kLocalSplitNumFieldNumber = 3;
  ::google::protobuf::int32 local_split_num() const;
  void set_local_split_num(::google::protobuf::int32 value);

  // optional int32 classes_num = 4;
  void clear_classes_num();
  static const int kClassesNumFieldNumber = 4;
  ::google::protobuf::int32 classes_num() const;
  void set_classes_num(::google::protobuf::int32 value);

  // repeated .com.collaborative.ml.PB_EncodedNumber left_sample_nums_of_splits = 5;
  int left_sample_nums_of_splits_size() const;
  void clear_left_sample_nums_of_splits();
  static const int kLeftSampleNumsOfSplitsFieldNumber = 5;
  const ::com::collaborative::ml::PB_EncodedNumber& left_sample_nums_of_splits(int index) const;
  ::com::collaborative::ml::PB_EncodedNumber* mutable_left_sample_nums_of_splits(int index);
  ::com::collaborative::ml::PB_EncodedNumber* add_left_sample_nums_of_splits();
  ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >*
      mutable_left_sample_nums_of_splits();
  const ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >&
      left_sample_nums_of_splits() const;

  // repeated .com.collaborative.ml.PB_EncodedNumber right_sample_nums_of_splits = 6;
  int right_sample_nums_of_splits_size() const;
  void clear_right_sample_nums_of_splits();
  static const int kRightSampleNumsOfSplitsFieldNumber = 6;
  const ::com::collaborative::ml::PB_EncodedNumber& right_sample_nums_of_splits(int index) const;
  ::com::collaborative::ml::PB_EncodedNumber* mutable_right_sample_nums_of_splits(int index);
  ::com::collaborative::ml::PB_EncodedNumber* add_right_sample_nums_of_splits();
  ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >*
      mutable_right_sample_nums_of_splits();
  const ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >&
      right_sample_nums_of_splits() const;

  // repeated .com.collaborative.ml.PB_EncryptedStatPerSplit encrypted_stats_of_splits = 7;
  int encrypted_stats_of_splits_size() const;
  void clear_encrypted_stats_of_splits();
  static const int kEncryptedStatsOfSplitsFieldNumber = 7;
  const ::com::collaborative::ml::PB_EncryptedStatPerSplit& encrypted_stats_of_splits(int index) const;
  ::com::collaborative::ml::PB_EncryptedStatPerSplit* mutable_encrypted_stats_of_splits(int index);
  ::com::collaborative::ml::PB_EncryptedStatPerSplit* add_encrypted_stats_of_splits();
  ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncryptedStatPerSplit >*
      mutable_encrypted_stats_of_splits();
  const ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncryptedStatPerSplit >&
      encrypted_stats_of_splits() const;

  // @@protoc_insertion_point(class_scope:com.collaborative.ml.PB_EncryptedStatistics)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 client_id_;
  ::google::protobuf::int32 node_index_;
  ::google::protobuf::int32 local_split_num_;
  ::google::protobuf::int32 classes_num_;
  ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber > left_sample_nums_of_splits_;
  ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber > right_sample_nums_of_splits_;
  ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncryptedStatPerSplit > encrypted_stats_of_splits_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_cart_2eproto();
  friend void protobuf_AssignDesc_cart_2eproto();
  friend void protobuf_ShutdownFile_cart_2eproto();

  void InitAsDefaultInstance();
  static PB_EncryptedStatistics* default_instance_;
};
// -------------------------------------------------------------------

class PB_UpdateInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.collaborative.ml.PB_UpdateInfo) */ {
 public:
  PB_UpdateInfo();
  virtual ~PB_UpdateInfo();

  PB_UpdateInfo(const PB_UpdateInfo& from);

  inline PB_UpdateInfo& operator=(const PB_UpdateInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_UpdateInfo& default_instance();

  void Swap(PB_UpdateInfo* other);

  // implements Message ----------------------------------------------

  inline PB_UpdateInfo* New() const { return New(NULL); }

  PB_UpdateInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_UpdateInfo& from);
  void MergeFrom(const PB_UpdateInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PB_UpdateInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 source_client_id = 1;
  void clear_source_client_id();
  static const int kSourceClientIdFieldNumber = 1;
  ::google::protobuf::int32 source_client_id() const;
  void set_source_client_id(::google::protobuf::int32 value);

  // optional int32 best_client_id = 2;
  void clear_best_client_id();
  static const int kBestClientIdFieldNumber = 2;
  ::google::protobuf::int32 best_client_id() const;
  void set_best_client_id(::google::protobuf::int32 value);

  // optional int32 best_feature_id = 3;
  void clear_best_feature_id();
  static const int kBestFeatureIdFieldNumber = 3;
  ::google::protobuf::int32 best_feature_id() const;
  void set_best_feature_id(::google::protobuf::int32 value);

  // optional int32 best_split_id = 4;
  void clear_best_split_id();
  static const int kBestSplitIdFieldNumber = 4;
  ::google::protobuf::int32 best_split_id() const;
  void set_best_split_id(::google::protobuf::int32 value);

  // optional .com.collaborative.ml.PB_EncodedNumber left_branch_impurity = 5;
  bool has_left_branch_impurity() const;
  void clear_left_branch_impurity();
  static const int kLeftBranchImpurityFieldNumber = 5;
  const ::com::collaborative::ml::PB_EncodedNumber& left_branch_impurity() const;
  ::com::collaborative::ml::PB_EncodedNumber* mutable_left_branch_impurity();
  ::com::collaborative::ml::PB_EncodedNumber* release_left_branch_impurity();
  void set_allocated_left_branch_impurity(::com::collaborative::ml::PB_EncodedNumber* left_branch_impurity);

  // optional .com.collaborative.ml.PB_EncodedNumber right_branch_impurity = 6;
  bool has_right_branch_impurity() const;
  void clear_right_branch_impurity();
  static const int kRightBranchImpurityFieldNumber = 6;
  const ::com::collaborative::ml::PB_EncodedNumber& right_branch_impurity() const;
  ::com::collaborative::ml::PB_EncodedNumber* mutable_right_branch_impurity();
  ::com::collaborative::ml::PB_EncodedNumber* release_right_branch_impurity();
  void set_allocated_right_branch_impurity(::com::collaborative::ml::PB_EncodedNumber* right_branch_impurity);

  // repeated .com.collaborative.ml.PB_EncodedNumber left_branch_sample_ivs = 7;
  int left_branch_sample_ivs_size() const;
  void clear_left_branch_sample_ivs();
  static const int kLeftBranchSampleIvsFieldNumber = 7;
  const ::com::collaborative::ml::PB_EncodedNumber& left_branch_sample_ivs(int index) const;
  ::com::collaborative::ml::PB_EncodedNumber* mutable_left_branch_sample_ivs(int index);
  ::com::collaborative::ml::PB_EncodedNumber* add_left_branch_sample_ivs();
  ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >*
      mutable_left_branch_sample_ivs();
  const ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >&
      left_branch_sample_ivs() const;

  // repeated .com.collaborative.ml.PB_EncodedNumber right_branch_sample_ivs = 8;
  int right_branch_sample_ivs_size() const;
  void clear_right_branch_sample_ivs();
  static const int kRightBranchSampleIvsFieldNumber = 8;
  const ::com::collaborative::ml::PB_EncodedNumber& right_branch_sample_ivs(int index) const;
  ::com::collaborative::ml::PB_EncodedNumber* mutable_right_branch_sample_ivs(int index);
  ::com::collaborative::ml::PB_EncodedNumber* add_right_branch_sample_ivs();
  ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >*
      mutable_right_branch_sample_ivs();
  const ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >&
      right_branch_sample_ivs() const;

  // @@protoc_insertion_point(class_scope:com.collaborative.ml.PB_UpdateInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 source_client_id_;
  ::google::protobuf::int32 best_client_id_;
  ::google::protobuf::int32 best_feature_id_;
  ::google::protobuf::int32 best_split_id_;
  ::com::collaborative::ml::PB_EncodedNumber* left_branch_impurity_;
  ::com::collaborative::ml::PB_EncodedNumber* right_branch_impurity_;
  ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber > left_branch_sample_ivs_;
  ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber > right_branch_sample_ivs_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_cart_2eproto();
  friend void protobuf_AssignDesc_cart_2eproto();
  friend void protobuf_ShutdownFile_cart_2eproto();

  void InitAsDefaultInstance();
  static PB_UpdateInfo* default_instance_;
};
// -------------------------------------------------------------------

class PB_SplitInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.collaborative.ml.PB_SplitInfo) */ {
 public:
  PB_SplitInfo();
  virtual ~PB_SplitInfo();

  PB_SplitInfo(const PB_SplitInfo& from);

  inline PB_SplitInfo& operator=(const PB_SplitInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_SplitInfo& default_instance();

  void Swap(PB_SplitInfo* other);

  // implements Message ----------------------------------------------

  inline PB_SplitInfo* New() const { return New(NULL); }

  PB_SplitInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_SplitInfo& from);
  void MergeFrom(const PB_SplitInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PB_SplitInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 global_split_num = 1;
  void clear_global_split_num();
  static const int kGlobalSplitNumFieldNumber = 1;
  ::google::protobuf::int32 global_split_num() const;
  void set_global_split_num(::google::protobuf::int32 value);

  // repeated int32 split_num_vec = 2;
  int split_num_vec_size() const;
  void clear_split_num_vec();
  static const int kSplitNumVecFieldNumber = 2;
  ::google::protobuf::int32 split_num_vec(int index) const;
  void set_split_num_vec(int index, ::google::protobuf::int32 value);
  void add_split_num_vec(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      split_num_vec() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_split_num_vec();

  // @@protoc_insertion_point(class_scope:com.collaborative.ml.PB_SplitInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > split_num_vec_;
  mutable int _split_num_vec_cached_byte_size_;
  ::google::protobuf::int32 global_split_num_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_cart_2eproto();
  friend void protobuf_AssignDesc_cart_2eproto();
  friend void protobuf_ShutdownFile_cart_2eproto();

  void InitAsDefaultInstance();
  static PB_SplitInfo* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_EncryptedLabelVec

// repeated .com.collaborative.ml.PB_EncodedNumber encrypted_label = 1;
inline int PB_EncryptedLabelVec::encrypted_label_size() const {
  return encrypted_label_.size();
}
inline void PB_EncryptedLabelVec::clear_encrypted_label() {
  encrypted_label_.Clear();
}
inline const ::com::collaborative::ml::PB_EncodedNumber& PB_EncryptedLabelVec::encrypted_label(int index) const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_EncryptedLabelVec.encrypted_label)
  return encrypted_label_.Get(index);
}
inline ::com::collaborative::ml::PB_EncodedNumber* PB_EncryptedLabelVec::mutable_encrypted_label(int index) {
  // @@protoc_insertion_point(field_mutable:com.collaborative.ml.PB_EncryptedLabelVec.encrypted_label)
  return encrypted_label_.Mutable(index);
}
inline ::com::collaborative::ml::PB_EncodedNumber* PB_EncryptedLabelVec::add_encrypted_label() {
  // @@protoc_insertion_point(field_add:com.collaborative.ml.PB_EncryptedLabelVec.encrypted_label)
  return encrypted_label_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >*
PB_EncryptedLabelVec::mutable_encrypted_label() {
  // @@protoc_insertion_point(field_mutable_list:com.collaborative.ml.PB_EncryptedLabelVec.encrypted_label)
  return &encrypted_label_;
}
inline const ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >&
PB_EncryptedLabelVec::encrypted_label() const {
  // @@protoc_insertion_point(field_list:com.collaborative.ml.PB_EncryptedLabelVec.encrypted_label)
  return encrypted_label_;
}

// -------------------------------------------------------------------

// PB_PruneConditionResult

// optional int32 node_index = 1;
inline void PB_PruneConditionResult::clear_node_index() {
  node_index_ = 0;
}
inline ::google::protobuf::int32 PB_PruneConditionResult::node_index() const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_PruneConditionResult.node_index)
  return node_index_;
}
inline void PB_PruneConditionResult::set_node_index(::google::protobuf::int32 value) {
  
  node_index_ = value;
  // @@protoc_insertion_point(field_set:com.collaborative.ml.PB_PruneConditionResult.node_index)
}

// optional int32 pruning_satisfied = 2;
inline void PB_PruneConditionResult::clear_pruning_satisfied() {
  pruning_satisfied_ = 0;
}
inline ::google::protobuf::int32 PB_PruneConditionResult::pruning_satisfied() const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_PruneConditionResult.pruning_satisfied)
  return pruning_satisfied_;
}
inline void PB_PruneConditionResult::set_pruning_satisfied(::google::protobuf::int32 value) {
  
  pruning_satisfied_ = value;
  // @@protoc_insertion_point(field_set:com.collaborative.ml.PB_PruneConditionResult.pruning_satisfied)
}

// repeated .com.collaborative.ml.PB_EncryptedLabelVec encrypted_label_vec = 3;
inline int PB_PruneConditionResult::encrypted_label_vec_size() const {
  return encrypted_label_vec_.size();
}
inline void PB_PruneConditionResult::clear_encrypted_label_vec() {
  encrypted_label_vec_.Clear();
}
inline const ::com::collaborative::ml::PB_EncryptedLabelVec& PB_PruneConditionResult::encrypted_label_vec(int index) const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_PruneConditionResult.encrypted_label_vec)
  return encrypted_label_vec_.Get(index);
}
inline ::com::collaborative::ml::PB_EncryptedLabelVec* PB_PruneConditionResult::mutable_encrypted_label_vec(int index) {
  // @@protoc_insertion_point(field_mutable:com.collaborative.ml.PB_PruneConditionResult.encrypted_label_vec)
  return encrypted_label_vec_.Mutable(index);
}
inline ::com::collaborative::ml::PB_EncryptedLabelVec* PB_PruneConditionResult::add_encrypted_label_vec() {
  // @@protoc_insertion_point(field_add:com.collaborative.ml.PB_PruneConditionResult.encrypted_label_vec)
  return encrypted_label_vec_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncryptedLabelVec >*
PB_PruneConditionResult::mutable_encrypted_label_vec() {
  // @@protoc_insertion_point(field_mutable_list:com.collaborative.ml.PB_PruneConditionResult.encrypted_label_vec)
  return &encrypted_label_vec_;
}
inline const ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncryptedLabelVec >&
PB_PruneConditionResult::encrypted_label_vec() const {
  // @@protoc_insertion_point(field_list:com.collaborative.ml.PB_PruneConditionResult.encrypted_label_vec)
  return encrypted_label_vec_;
}

// optional .com.collaborative.ml.PB_EncodedNumber label = 4;
inline bool PB_PruneConditionResult::has_label() const {
  return !_is_default_instance_ && label_ != NULL;
}
inline void PB_PruneConditionResult::clear_label() {
  if (GetArenaNoVirtual() == NULL && label_ != NULL) delete label_;
  label_ = NULL;
}
inline const ::com::collaborative::ml::PB_EncodedNumber& PB_PruneConditionResult::label() const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_PruneConditionResult.label)
  return label_ != NULL ? *label_ : *default_instance_->label_;
}
inline ::com::collaborative::ml::PB_EncodedNumber* PB_PruneConditionResult::mutable_label() {
  
  if (label_ == NULL) {
    label_ = new ::com::collaborative::ml::PB_EncodedNumber;
  }
  // @@protoc_insertion_point(field_mutable:com.collaborative.ml.PB_PruneConditionResult.label)
  return label_;
}
inline ::com::collaborative::ml::PB_EncodedNumber* PB_PruneConditionResult::release_label() {
  // @@protoc_insertion_point(field_release:com.collaborative.ml.PB_PruneConditionResult.label)
  
  ::com::collaborative::ml::PB_EncodedNumber* temp = label_;
  label_ = NULL;
  return temp;
}
inline void PB_PruneConditionResult::set_allocated_label(::com::collaborative::ml::PB_EncodedNumber* label) {
  delete label_;
  label_ = label;
  if (label) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.collaborative.ml.PB_PruneConditionResult.label)
}

// -------------------------------------------------------------------

// PB_PruneCheckResult

// optional int32 node_index = 1;
inline void PB_PruneCheckResult::clear_node_index() {
  node_index_ = 0;
}
inline ::google::protobuf::int32 PB_PruneCheckResult::node_index() const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_PruneCheckResult.node_index)
  return node_index_;
}
inline void PB_PruneCheckResult::set_node_index(::google::protobuf::int32 value) {
  
  node_index_ = value;
  // @@protoc_insertion_point(field_set:com.collaborative.ml.PB_PruneCheckResult.node_index)
}

// optional int32 is_satisfied = 2;
inline void PB_PruneCheckResult::clear_is_satisfied() {
  is_satisfied_ = 0;
}
inline ::google::protobuf::int32 PB_PruneCheckResult::is_satisfied() const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_PruneCheckResult.is_satisfied)
  return is_satisfied_;
}
inline void PB_PruneCheckResult::set_is_satisfied(::google::protobuf::int32 value) {
  
  is_satisfied_ = value;
  // @@protoc_insertion_point(field_set:com.collaborative.ml.PB_PruneCheckResult.is_satisfied)
}

// optional .com.collaborative.ml.PB_EncodedNumber label = 3;
inline bool PB_PruneCheckResult::has_label() const {
  return !_is_default_instance_ && label_ != NULL;
}
inline void PB_PruneCheckResult::clear_label() {
  if (GetArenaNoVirtual() == NULL && label_ != NULL) delete label_;
  label_ = NULL;
}
inline const ::com::collaborative::ml::PB_EncodedNumber& PB_PruneCheckResult::label() const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_PruneCheckResult.label)
  return label_ != NULL ? *label_ : *default_instance_->label_;
}
inline ::com::collaborative::ml::PB_EncodedNumber* PB_PruneCheckResult::mutable_label() {
  
  if (label_ == NULL) {
    label_ = new ::com::collaborative::ml::PB_EncodedNumber;
  }
  // @@protoc_insertion_point(field_mutable:com.collaborative.ml.PB_PruneCheckResult.label)
  return label_;
}
inline ::com::collaborative::ml::PB_EncodedNumber* PB_PruneCheckResult::release_label() {
  // @@protoc_insertion_point(field_release:com.collaborative.ml.PB_PruneCheckResult.label)
  
  ::com::collaborative::ml::PB_EncodedNumber* temp = label_;
  label_ = NULL;
  return temp;
}
inline void PB_PruneCheckResult::set_allocated_label(::com::collaborative::ml::PB_EncodedNumber* label) {
  delete label_;
  label_ = label;
  if (label) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.collaborative.ml.PB_PruneCheckResult.label)
}

// -------------------------------------------------------------------

// PB_EncryptedLabelVector

// repeated .com.collaborative.ml.PB_EncodedNumber label_indicator = 1;
inline int PB_EncryptedLabelVector::label_indicator_size() const {
  return label_indicator_.size();
}
inline void PB_EncryptedLabelVector::clear_label_indicator() {
  label_indicator_.Clear();
}
inline const ::com::collaborative::ml::PB_EncodedNumber& PB_EncryptedLabelVector::label_indicator(int index) const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_EncryptedLabelVector.label_indicator)
  return label_indicator_.Get(index);
}
inline ::com::collaborative::ml::PB_EncodedNumber* PB_EncryptedLabelVector::mutable_label_indicator(int index) {
  // @@protoc_insertion_point(field_mutable:com.collaborative.ml.PB_EncryptedLabelVector.label_indicator)
  return label_indicator_.Mutable(index);
}
inline ::com::collaborative::ml::PB_EncodedNumber* PB_EncryptedLabelVector::add_label_indicator() {
  // @@protoc_insertion_point(field_add:com.collaborative.ml.PB_EncryptedLabelVector.label_indicator)
  return label_indicator_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >*
PB_EncryptedLabelVector::mutable_label_indicator() {
  // @@protoc_insertion_point(field_mutable_list:com.collaborative.ml.PB_EncryptedLabelVector.label_indicator)
  return &label_indicator_;
}
inline const ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >&
PB_EncryptedLabelVector::label_indicator() const {
  // @@protoc_insertion_point(field_list:com.collaborative.ml.PB_EncryptedLabelVector.label_indicator)
  return label_indicator_;
}

// -------------------------------------------------------------------

// PB_EncryptedStatPerSplit

// repeated .com.collaborative.ml.PB_EncodedNumber encrypted_stat = 1;
inline int PB_EncryptedStatPerSplit::encrypted_stat_size() const {
  return encrypted_stat_.size();
}
inline void PB_EncryptedStatPerSplit::clear_encrypted_stat() {
  encrypted_stat_.Clear();
}
inline const ::com::collaborative::ml::PB_EncodedNumber& PB_EncryptedStatPerSplit::encrypted_stat(int index) const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_EncryptedStatPerSplit.encrypted_stat)
  return encrypted_stat_.Get(index);
}
inline ::com::collaborative::ml::PB_EncodedNumber* PB_EncryptedStatPerSplit::mutable_encrypted_stat(int index) {
  // @@protoc_insertion_point(field_mutable:com.collaborative.ml.PB_EncryptedStatPerSplit.encrypted_stat)
  return encrypted_stat_.Mutable(index);
}
inline ::com::collaborative::ml::PB_EncodedNumber* PB_EncryptedStatPerSplit::add_encrypted_stat() {
  // @@protoc_insertion_point(field_add:com.collaborative.ml.PB_EncryptedStatPerSplit.encrypted_stat)
  return encrypted_stat_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >*
PB_EncryptedStatPerSplit::mutable_encrypted_stat() {
  // @@protoc_insertion_point(field_mutable_list:com.collaborative.ml.PB_EncryptedStatPerSplit.encrypted_stat)
  return &encrypted_stat_;
}
inline const ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >&
PB_EncryptedStatPerSplit::encrypted_stat() const {
  // @@protoc_insertion_point(field_list:com.collaborative.ml.PB_EncryptedStatPerSplit.encrypted_stat)
  return encrypted_stat_;
}

// -------------------------------------------------------------------

// PB_EncryptedStatistics

// optional int32 client_id = 1;
inline void PB_EncryptedStatistics::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 PB_EncryptedStatistics::client_id() const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_EncryptedStatistics.client_id)
  return client_id_;
}
inline void PB_EncryptedStatistics::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:com.collaborative.ml.PB_EncryptedStatistics.client_id)
}

// optional int32 node_index = 2;
inline void PB_EncryptedStatistics::clear_node_index() {
  node_index_ = 0;
}
inline ::google::protobuf::int32 PB_EncryptedStatistics::node_index() const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_EncryptedStatistics.node_index)
  return node_index_;
}
inline void PB_EncryptedStatistics::set_node_index(::google::protobuf::int32 value) {
  
  node_index_ = value;
  // @@protoc_insertion_point(field_set:com.collaborative.ml.PB_EncryptedStatistics.node_index)
}

// optional int32 local_split_num = 3;
inline void PB_EncryptedStatistics::clear_local_split_num() {
  local_split_num_ = 0;
}
inline ::google::protobuf::int32 PB_EncryptedStatistics::local_split_num() const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_EncryptedStatistics.local_split_num)
  return local_split_num_;
}
inline void PB_EncryptedStatistics::set_local_split_num(::google::protobuf::int32 value) {
  
  local_split_num_ = value;
  // @@protoc_insertion_point(field_set:com.collaborative.ml.PB_EncryptedStatistics.local_split_num)
}

// optional int32 classes_num = 4;
inline void PB_EncryptedStatistics::clear_classes_num() {
  classes_num_ = 0;
}
inline ::google::protobuf::int32 PB_EncryptedStatistics::classes_num() const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_EncryptedStatistics.classes_num)
  return classes_num_;
}
inline void PB_EncryptedStatistics::set_classes_num(::google::protobuf::int32 value) {
  
  classes_num_ = value;
  // @@protoc_insertion_point(field_set:com.collaborative.ml.PB_EncryptedStatistics.classes_num)
}

// repeated .com.collaborative.ml.PB_EncodedNumber left_sample_nums_of_splits = 5;
inline int PB_EncryptedStatistics::left_sample_nums_of_splits_size() const {
  return left_sample_nums_of_splits_.size();
}
inline void PB_EncryptedStatistics::clear_left_sample_nums_of_splits() {
  left_sample_nums_of_splits_.Clear();
}
inline const ::com::collaborative::ml::PB_EncodedNumber& PB_EncryptedStatistics::left_sample_nums_of_splits(int index) const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_EncryptedStatistics.left_sample_nums_of_splits)
  return left_sample_nums_of_splits_.Get(index);
}
inline ::com::collaborative::ml::PB_EncodedNumber* PB_EncryptedStatistics::mutable_left_sample_nums_of_splits(int index) {
  // @@protoc_insertion_point(field_mutable:com.collaborative.ml.PB_EncryptedStatistics.left_sample_nums_of_splits)
  return left_sample_nums_of_splits_.Mutable(index);
}
inline ::com::collaborative::ml::PB_EncodedNumber* PB_EncryptedStatistics::add_left_sample_nums_of_splits() {
  // @@protoc_insertion_point(field_add:com.collaborative.ml.PB_EncryptedStatistics.left_sample_nums_of_splits)
  return left_sample_nums_of_splits_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >*
PB_EncryptedStatistics::mutable_left_sample_nums_of_splits() {
  // @@protoc_insertion_point(field_mutable_list:com.collaborative.ml.PB_EncryptedStatistics.left_sample_nums_of_splits)
  return &left_sample_nums_of_splits_;
}
inline const ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >&
PB_EncryptedStatistics::left_sample_nums_of_splits() const {
  // @@protoc_insertion_point(field_list:com.collaborative.ml.PB_EncryptedStatistics.left_sample_nums_of_splits)
  return left_sample_nums_of_splits_;
}

// repeated .com.collaborative.ml.PB_EncodedNumber right_sample_nums_of_splits = 6;
inline int PB_EncryptedStatistics::right_sample_nums_of_splits_size() const {
  return right_sample_nums_of_splits_.size();
}
inline void PB_EncryptedStatistics::clear_right_sample_nums_of_splits() {
  right_sample_nums_of_splits_.Clear();
}
inline const ::com::collaborative::ml::PB_EncodedNumber& PB_EncryptedStatistics::right_sample_nums_of_splits(int index) const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_EncryptedStatistics.right_sample_nums_of_splits)
  return right_sample_nums_of_splits_.Get(index);
}
inline ::com::collaborative::ml::PB_EncodedNumber* PB_EncryptedStatistics::mutable_right_sample_nums_of_splits(int index) {
  // @@protoc_insertion_point(field_mutable:com.collaborative.ml.PB_EncryptedStatistics.right_sample_nums_of_splits)
  return right_sample_nums_of_splits_.Mutable(index);
}
inline ::com::collaborative::ml::PB_EncodedNumber* PB_EncryptedStatistics::add_right_sample_nums_of_splits() {
  // @@protoc_insertion_point(field_add:com.collaborative.ml.PB_EncryptedStatistics.right_sample_nums_of_splits)
  return right_sample_nums_of_splits_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >*
PB_EncryptedStatistics::mutable_right_sample_nums_of_splits() {
  // @@protoc_insertion_point(field_mutable_list:com.collaborative.ml.PB_EncryptedStatistics.right_sample_nums_of_splits)
  return &right_sample_nums_of_splits_;
}
inline const ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >&
PB_EncryptedStatistics::right_sample_nums_of_splits() const {
  // @@protoc_insertion_point(field_list:com.collaborative.ml.PB_EncryptedStatistics.right_sample_nums_of_splits)
  return right_sample_nums_of_splits_;
}

// repeated .com.collaborative.ml.PB_EncryptedStatPerSplit encrypted_stats_of_splits = 7;
inline int PB_EncryptedStatistics::encrypted_stats_of_splits_size() const {
  return encrypted_stats_of_splits_.size();
}
inline void PB_EncryptedStatistics::clear_encrypted_stats_of_splits() {
  encrypted_stats_of_splits_.Clear();
}
inline const ::com::collaborative::ml::PB_EncryptedStatPerSplit& PB_EncryptedStatistics::encrypted_stats_of_splits(int index) const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_EncryptedStatistics.encrypted_stats_of_splits)
  return encrypted_stats_of_splits_.Get(index);
}
inline ::com::collaborative::ml::PB_EncryptedStatPerSplit* PB_EncryptedStatistics::mutable_encrypted_stats_of_splits(int index) {
  // @@protoc_insertion_point(field_mutable:com.collaborative.ml.PB_EncryptedStatistics.encrypted_stats_of_splits)
  return encrypted_stats_of_splits_.Mutable(index);
}
inline ::com::collaborative::ml::PB_EncryptedStatPerSplit* PB_EncryptedStatistics::add_encrypted_stats_of_splits() {
  // @@protoc_insertion_point(field_add:com.collaborative.ml.PB_EncryptedStatistics.encrypted_stats_of_splits)
  return encrypted_stats_of_splits_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncryptedStatPerSplit >*
PB_EncryptedStatistics::mutable_encrypted_stats_of_splits() {
  // @@protoc_insertion_point(field_mutable_list:com.collaborative.ml.PB_EncryptedStatistics.encrypted_stats_of_splits)
  return &encrypted_stats_of_splits_;
}
inline const ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncryptedStatPerSplit >&
PB_EncryptedStatistics::encrypted_stats_of_splits() const {
  // @@protoc_insertion_point(field_list:com.collaborative.ml.PB_EncryptedStatistics.encrypted_stats_of_splits)
  return encrypted_stats_of_splits_;
}

// -------------------------------------------------------------------

// PB_UpdateInfo

// optional int32 source_client_id = 1;
inline void PB_UpdateInfo::clear_source_client_id() {
  source_client_id_ = 0;
}
inline ::google::protobuf::int32 PB_UpdateInfo::source_client_id() const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_UpdateInfo.source_client_id)
  return source_client_id_;
}
inline void PB_UpdateInfo::set_source_client_id(::google::protobuf::int32 value) {
  
  source_client_id_ = value;
  // @@protoc_insertion_point(field_set:com.collaborative.ml.PB_UpdateInfo.source_client_id)
}

// optional int32 best_client_id = 2;
inline void PB_UpdateInfo::clear_best_client_id() {
  best_client_id_ = 0;
}
inline ::google::protobuf::int32 PB_UpdateInfo::best_client_id() const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_UpdateInfo.best_client_id)
  return best_client_id_;
}
inline void PB_UpdateInfo::set_best_client_id(::google::protobuf::int32 value) {
  
  best_client_id_ = value;
  // @@protoc_insertion_point(field_set:com.collaborative.ml.PB_UpdateInfo.best_client_id)
}

// optional int32 best_feature_id = 3;
inline void PB_UpdateInfo::clear_best_feature_id() {
  best_feature_id_ = 0;
}
inline ::google::protobuf::int32 PB_UpdateInfo::best_feature_id() const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_UpdateInfo.best_feature_id)
  return best_feature_id_;
}
inline void PB_UpdateInfo::set_best_feature_id(::google::protobuf::int32 value) {
  
  best_feature_id_ = value;
  // @@protoc_insertion_point(field_set:com.collaborative.ml.PB_UpdateInfo.best_feature_id)
}

// optional int32 best_split_id = 4;
inline void PB_UpdateInfo::clear_best_split_id() {
  best_split_id_ = 0;
}
inline ::google::protobuf::int32 PB_UpdateInfo::best_split_id() const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_UpdateInfo.best_split_id)
  return best_split_id_;
}
inline void PB_UpdateInfo::set_best_split_id(::google::protobuf::int32 value) {
  
  best_split_id_ = value;
  // @@protoc_insertion_point(field_set:com.collaborative.ml.PB_UpdateInfo.best_split_id)
}

// optional .com.collaborative.ml.PB_EncodedNumber left_branch_impurity = 5;
inline bool PB_UpdateInfo::has_left_branch_impurity() const {
  return !_is_default_instance_ && left_branch_impurity_ != NULL;
}
inline void PB_UpdateInfo::clear_left_branch_impurity() {
  if (GetArenaNoVirtual() == NULL && left_branch_impurity_ != NULL) delete left_branch_impurity_;
  left_branch_impurity_ = NULL;
}
inline const ::com::collaborative::ml::PB_EncodedNumber& PB_UpdateInfo::left_branch_impurity() const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_UpdateInfo.left_branch_impurity)
  return left_branch_impurity_ != NULL ? *left_branch_impurity_ : *default_instance_->left_branch_impurity_;
}
inline ::com::collaborative::ml::PB_EncodedNumber* PB_UpdateInfo::mutable_left_branch_impurity() {
  
  if (left_branch_impurity_ == NULL) {
    left_branch_impurity_ = new ::com::collaborative::ml::PB_EncodedNumber;
  }
  // @@protoc_insertion_point(field_mutable:com.collaborative.ml.PB_UpdateInfo.left_branch_impurity)
  return left_branch_impurity_;
}
inline ::com::collaborative::ml::PB_EncodedNumber* PB_UpdateInfo::release_left_branch_impurity() {
  // @@protoc_insertion_point(field_release:com.collaborative.ml.PB_UpdateInfo.left_branch_impurity)
  
  ::com::collaborative::ml::PB_EncodedNumber* temp = left_branch_impurity_;
  left_branch_impurity_ = NULL;
  return temp;
}
inline void PB_UpdateInfo::set_allocated_left_branch_impurity(::com::collaborative::ml::PB_EncodedNumber* left_branch_impurity) {
  delete left_branch_impurity_;
  left_branch_impurity_ = left_branch_impurity;
  if (left_branch_impurity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.collaborative.ml.PB_UpdateInfo.left_branch_impurity)
}

// optional .com.collaborative.ml.PB_EncodedNumber right_branch_impurity = 6;
inline bool PB_UpdateInfo::has_right_branch_impurity() const {
  return !_is_default_instance_ && right_branch_impurity_ != NULL;
}
inline void PB_UpdateInfo::clear_right_branch_impurity() {
  if (GetArenaNoVirtual() == NULL && right_branch_impurity_ != NULL) delete right_branch_impurity_;
  right_branch_impurity_ = NULL;
}
inline const ::com::collaborative::ml::PB_EncodedNumber& PB_UpdateInfo::right_branch_impurity() const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_UpdateInfo.right_branch_impurity)
  return right_branch_impurity_ != NULL ? *right_branch_impurity_ : *default_instance_->right_branch_impurity_;
}
inline ::com::collaborative::ml::PB_EncodedNumber* PB_UpdateInfo::mutable_right_branch_impurity() {
  
  if (right_branch_impurity_ == NULL) {
    right_branch_impurity_ = new ::com::collaborative::ml::PB_EncodedNumber;
  }
  // @@protoc_insertion_point(field_mutable:com.collaborative.ml.PB_UpdateInfo.right_branch_impurity)
  return right_branch_impurity_;
}
inline ::com::collaborative::ml::PB_EncodedNumber* PB_UpdateInfo::release_right_branch_impurity() {
  // @@protoc_insertion_point(field_release:com.collaborative.ml.PB_UpdateInfo.right_branch_impurity)
  
  ::com::collaborative::ml::PB_EncodedNumber* temp = right_branch_impurity_;
  right_branch_impurity_ = NULL;
  return temp;
}
inline void PB_UpdateInfo::set_allocated_right_branch_impurity(::com::collaborative::ml::PB_EncodedNumber* right_branch_impurity) {
  delete right_branch_impurity_;
  right_branch_impurity_ = right_branch_impurity;
  if (right_branch_impurity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.collaborative.ml.PB_UpdateInfo.right_branch_impurity)
}

// repeated .com.collaborative.ml.PB_EncodedNumber left_branch_sample_ivs = 7;
inline int PB_UpdateInfo::left_branch_sample_ivs_size() const {
  return left_branch_sample_ivs_.size();
}
inline void PB_UpdateInfo::clear_left_branch_sample_ivs() {
  left_branch_sample_ivs_.Clear();
}
inline const ::com::collaborative::ml::PB_EncodedNumber& PB_UpdateInfo::left_branch_sample_ivs(int index) const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_UpdateInfo.left_branch_sample_ivs)
  return left_branch_sample_ivs_.Get(index);
}
inline ::com::collaborative::ml::PB_EncodedNumber* PB_UpdateInfo::mutable_left_branch_sample_ivs(int index) {
  // @@protoc_insertion_point(field_mutable:com.collaborative.ml.PB_UpdateInfo.left_branch_sample_ivs)
  return left_branch_sample_ivs_.Mutable(index);
}
inline ::com::collaborative::ml::PB_EncodedNumber* PB_UpdateInfo::add_left_branch_sample_ivs() {
  // @@protoc_insertion_point(field_add:com.collaborative.ml.PB_UpdateInfo.left_branch_sample_ivs)
  return left_branch_sample_ivs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >*
PB_UpdateInfo::mutable_left_branch_sample_ivs() {
  // @@protoc_insertion_point(field_mutable_list:com.collaborative.ml.PB_UpdateInfo.left_branch_sample_ivs)
  return &left_branch_sample_ivs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >&
PB_UpdateInfo::left_branch_sample_ivs() const {
  // @@protoc_insertion_point(field_list:com.collaborative.ml.PB_UpdateInfo.left_branch_sample_ivs)
  return left_branch_sample_ivs_;
}

// repeated .com.collaborative.ml.PB_EncodedNumber right_branch_sample_ivs = 8;
inline int PB_UpdateInfo::right_branch_sample_ivs_size() const {
  return right_branch_sample_ivs_.size();
}
inline void PB_UpdateInfo::clear_right_branch_sample_ivs() {
  right_branch_sample_ivs_.Clear();
}
inline const ::com::collaborative::ml::PB_EncodedNumber& PB_UpdateInfo::right_branch_sample_ivs(int index) const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_UpdateInfo.right_branch_sample_ivs)
  return right_branch_sample_ivs_.Get(index);
}
inline ::com::collaborative::ml::PB_EncodedNumber* PB_UpdateInfo::mutable_right_branch_sample_ivs(int index) {
  // @@protoc_insertion_point(field_mutable:com.collaborative.ml.PB_UpdateInfo.right_branch_sample_ivs)
  return right_branch_sample_ivs_.Mutable(index);
}
inline ::com::collaborative::ml::PB_EncodedNumber* PB_UpdateInfo::add_right_branch_sample_ivs() {
  // @@protoc_insertion_point(field_add:com.collaborative.ml.PB_UpdateInfo.right_branch_sample_ivs)
  return right_branch_sample_ivs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >*
PB_UpdateInfo::mutable_right_branch_sample_ivs() {
  // @@protoc_insertion_point(field_mutable_list:com.collaborative.ml.PB_UpdateInfo.right_branch_sample_ivs)
  return &right_branch_sample_ivs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::com::collaborative::ml::PB_EncodedNumber >&
PB_UpdateInfo::right_branch_sample_ivs() const {
  // @@protoc_insertion_point(field_list:com.collaborative.ml.PB_UpdateInfo.right_branch_sample_ivs)
  return right_branch_sample_ivs_;
}

// -------------------------------------------------------------------

// PB_SplitInfo

// optional int32 global_split_num = 1;
inline void PB_SplitInfo::clear_global_split_num() {
  global_split_num_ = 0;
}
inline ::google::protobuf::int32 PB_SplitInfo::global_split_num() const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_SplitInfo.global_split_num)
  return global_split_num_;
}
inline void PB_SplitInfo::set_global_split_num(::google::protobuf::int32 value) {
  
  global_split_num_ = value;
  // @@protoc_insertion_point(field_set:com.collaborative.ml.PB_SplitInfo.global_split_num)
}

// repeated int32 split_num_vec = 2;
inline int PB_SplitInfo::split_num_vec_size() const {
  return split_num_vec_.size();
}
inline void PB_SplitInfo::clear_split_num_vec() {
  split_num_vec_.Clear();
}
inline ::google::protobuf::int32 PB_SplitInfo::split_num_vec(int index) const {
  // @@protoc_insertion_point(field_get:com.collaborative.ml.PB_SplitInfo.split_num_vec)
  return split_num_vec_.Get(index);
}
inline void PB_SplitInfo::set_split_num_vec(int index, ::google::protobuf::int32 value) {
  split_num_vec_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.collaborative.ml.PB_SplitInfo.split_num_vec)
}
inline void PB_SplitInfo::add_split_num_vec(::google::protobuf::int32 value) {
  split_num_vec_.Add(value);
  // @@protoc_insertion_point(field_add:com.collaborative.ml.PB_SplitInfo.split_num_vec)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PB_SplitInfo::split_num_vec() const {
  // @@protoc_insertion_point(field_list:com.collaborative.ml.PB_SplitInfo.split_num_vec)
  return split_num_vec_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PB_SplitInfo::mutable_split_num_vec() {
  // @@protoc_insertion_point(field_mutable_list:com.collaborative.ml.PB_SplitInfo.split_num_vec)
  return &split_num_vec_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ml
}  // namespace collaborative
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cart_2eproto__INCLUDED
